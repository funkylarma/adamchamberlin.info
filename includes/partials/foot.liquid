<script type="application/ld+json">
  {
    "@context": "https://schema.org/",
    "@type": "Person",
    "name": "Adam Chamberlin",
    "url": "https://adamchamberlin.info",
    "image": "https://adamchamberlin.info/assets/images/headshot.jpeg",
    "sameAs": [
      "https://www.youtube.com/@funkylarma",
      "https://www.linkedin.com/in/adam-chamberlin/",
      "https://github.com/funkylarma",
      "https://mastodon.social/@FunkyLarma"
    ],
    "jobTitle": "Head of Development",
    "worksFor": {
      "@type": "Organization",
      "name": "Mackman Group"
    }
  }
</script>
<!-- This page `{{ page.url }}` was built on {% currentBuildDate %} -->
<script>
  {% capture jsfoot %}
    document.addEventListener('DOMContentLoaded', () => {
      // Use JS to display the theme selector
      //document.querySelector('.themes').removeAttribute('hidden');
      // Get the theme selector element or break
      const themePicker = document.getElementById('theme-picker');
      if (!themePicker) return;
      // Listen for change to sync localStorage and data- attribute
      themePicker.addEventListener('change', (e) => {
        const theme = e.target.value;
        if (theme === 'auto') {
          // Remove JS-set theme so the CSS :not([data-theme]) selectors kick in
          delete document.documentElement.dataset['ac_theme'];
          localStorage.removeItem('ac_theme');
        } else {
          document.documentElement.dataset['ac_theme'] = theme;
          localStorage.setItem('ac_theme', theme);
        }
      });
      // Sync picker's selected state to reflect initial theme
      const initialTheme = cachedTheme ?? 'auto';
      themePicker.querySelector('input[checked]').removeAttribute('checked');
      themePicker.querySelector(`input[value="${initialTheme}"]`).setAttribute('checked', '');
    });
  {% endcapture %}
  {% if metadata.env == "production" %}
  {{ jsfoot | jsmin }}
  {% else %}
  {{ jsfoot }}
  {% endif %}
</script>
<script async type="module" src="{{ '/assets/js/cookieconsent-config.js' | url }}"></script>
